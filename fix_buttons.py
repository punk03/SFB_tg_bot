"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–Ω–æ–ø–æ–∫ –≤ –±–æ—Ç–µ.
–î–æ–±–∞–≤–ª—è–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –≤–µ—Ä—Å–∏—é —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ –±–µ–∑ —ç–º–æ–¥–∑–∏.
–ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤.
"""

import re
import os

def fix_main_py():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–Ω–æ–ø–æ–∫ –≤ main.py"""
    filename = "main.py"
    
    if not os.path.exists(filename):
        print(f"–§–∞–π–ª {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –ü—Ä–æ—á–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
    with open(filename, 'r', encoding='utf-8') as file:
        content = file.read()
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –∑–∞–º–µ–Ω—ã
    patterns = [
        # –ë–∞–∑–∞ –º–∞—Å—Ç–µ—Ä–æ–≤ –°–§–ë
        (r'@dp\.message_handler\(lambda m: m\.text == "üë∑‚Äç‚ôÇÔ∏è –ë–∞–∑–∞ –º–∞—Å—Ç–µ—Ä–æ–≤ –°–§–ë"\)',
         '@dp.message_handler(lambda m: m.text == "üë∑‚Äç‚ôÇÔ∏è –ë–∞–∑–∞ –º–∞—Å—Ç–µ—Ä–æ–≤ –°–§–ë" or m.text == "–ë–∞–∑–∞ –º–∞—Å—Ç–µ—Ä–æ–≤ –°–§–ë")'),
        
        # –ú–∞–≥–∞–∑–∏–Ω—ã-–ø–∞—Ä—Ç–Ω–µ—Ä—ã –°–§–ë
        (r'@dp\.message_handler\(lambda m: m\.text == "üè™ –ú–∞–≥–∞–∑–∏–Ω—ã-–ø–∞—Ä—Ç–Ω–µ—Ä—ã –°–§–ë"\)',
         '@dp.message_handler(lambda m: m.text == "üè™ –ú–∞–≥–∞–∑–∏–Ω—ã-–ø–∞—Ä—Ç–Ω–µ—Ä—ã –°–§–ë" or m.text == "–ú–∞–≥–∞–∑–∏–Ω—ã-–ø–∞—Ä—Ç–Ω–µ—Ä—ã –°–§–ë")'),
        
        # –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∑–∞–ø–∏—Å—å
        (r'@dp\.message_handler\(lambda m: m\.text == "üìù –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∑–∞–ø–∏—Å—å"\)',
         '@dp.message_handler(lambda m: m.text == "üìù –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∑–∞–ø–∏—Å—å" or m.text == "–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∑–∞–ø–∏—Å—å")'),
        
        # –°—Ç–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω–æ–º-–ø–∞—Ä—Ç–Ω–µ—Ä–æ–º
        (r'@dp\.message_handler\(lambda m: m\.text == "ü§ù –°—Ç–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω–æ–º-–ø–∞—Ä—Ç–Ω–µ—Ä–æ–º"\)',
         '@dp.message_handler(lambda m: m.text == "ü§ù –°—Ç–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω–æ–º-–ø–∞—Ä—Ç–Ω–µ—Ä–æ–º" or m.text == "–°—Ç–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω–æ–º-–ø–∞—Ä—Ç–Ω–µ—Ä–æ–º")'),
        
        # –ü–æ–ø–∞—Å—Ç—å –≤ –±–∞–∑—É –º–∞—Å—Ç–µ—Ä–æ–≤
        (r'@dp\.message_handler\(lambda m: m\.text == "üìã –ü–æ–ø–∞—Å—Ç—å –≤ –±–∞–∑—É –º–∞—Å—Ç–µ—Ä–æ–≤"\)',
         '@dp.message_handler(lambda m: m.text == "üìã –ü–æ–ø–∞—Å—Ç—å –≤ –±–∞–∑—É –º–∞—Å—Ç–µ—Ä–æ–≤" or m.text == "–ü–æ–ø–∞—Å—Ç—å –≤ –±–∞–∑—É –º–∞—Å—Ç–µ—Ä–æ–≤")'),
        
        # –°—Ç–µ–Ω–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
        (r'@dp\.message_handler\(lambda m: m\.text == "üì∞ –°—Ç–µ–Ω–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞"\)',
         '@dp.message_handler(lambda m: m.text == "üì∞ –°—Ç–µ–Ω–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞" or m.text == "–°—Ç–µ–Ω–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞")')
    ]
    
    # –°—á–µ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    changes_count = 0
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –∑–∞–º–µ–Ω—ã
    for pattern, replacement in patterns:
        if re.search(pattern, content):
            content = re.sub(pattern, replacement, content)
            changes_count += 1
    
    # –ï—Å–ª–∏ –±—ã–ª–∏ –≤–Ω–µ—Å–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    if changes_count > 0:
        with open(filename, 'w', encoding='utf-8') as file:
            file.write(content)
        print(f"–í–Ω–µ—Å–µ–Ω–æ {changes_count} –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ñ–∞–π–ª {filename}")
        return True
    else:
        print(f"–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª {filename} –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è")
        return False

def fix_button_py():
    """–°–æ–∑–¥–∞–µ—Ç –∫–æ–ø–∏—é –∫–Ω–æ–ø–æ–∫ –±–µ–∑ —ç–º–æ–¥–∑–∏ –≤ buttons.py"""
    filename = "tg_bot/buttons.py"
    
    if not os.path.exists(filename):
        print(f"–§–∞–π–ª {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –ü—Ä–æ—á–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
    with open(filename, 'r', encoding='utf-8') as file:
        content = file.read()
    
    # –ò—â–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    main_keyboard_pattern = r'main = ReplyKeyboardMarkup\(resize_keyboard=True, row_width=2\)\s+# –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–æ–≤–æ–º—É —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—é\s+main\.row\(\s+KeyboardButton\("(.+?)"\),\s+KeyboardButton\("(.+?)"\)\s+\)\s+main\.add\(KeyboardButton\("(.+?)"\)\)\s+main\.add\(KeyboardButton\("(.+?)"\)\)\s+main\.row\(\s+KeyboardButton\("(.+?)"\),\s+KeyboardButton\("(.+?)"\)\s+\)'
    
    match = re.search(main_keyboard_pattern, content)
    
    if not match:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º, —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –ª–∏ –≤–µ—Ä—Å–∏–∏ –±–µ–∑ —ç–º–æ–¥–∑–∏
    if "–ë–∞–∑–∞ –º–∞—Å—Ç–µ—Ä–æ–≤ –°–§–ë" in content and "–ú–∞–≥–∞–∑–∏–Ω—ã-–ø–∞—Ä—Ç–Ω–µ—Ä—ã –°–§–ë" in content:
        print("–í–µ—Ä—Å–∏–∏ –∫–Ω–æ–ø–æ–∫ –±–µ–∑ —ç–º–æ–¥–∑–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ —Ñ–∞–π–ª–µ")
        return False
    
    # –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –¥–æ–±–∞–≤–ª—è—è –≤–µ—Ä—Å–∏–∏ –±–µ–∑ —ç–º–æ–¥–∑–∏
    with open(filename, 'w', encoding='utf-8') as file:
        # –ó–∞–º–µ–Ω—è–µ–º —ç–º–æ–¥–∑–∏ –Ω–∞ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –≤ –Ω–∞–∑–≤–∞–Ω–∏—è—Ö –∫–Ω–æ–ø–æ–∫
        button1 = match.group(1).replace("üè™ ", "")
        button2 = match.group(2).replace("üë∑‚Äç‚ôÇÔ∏è ", "")
        button3 = match.group(3).replace("üì∞ ", "")
        button4 = match.group(4).replace("üìù ", "")
        button5 = match.group(5).replace("ü§ù ", "")
        button6 = match.group(6).replace("üìã ", "")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –¥–æ–±–∞–≤–ª—è—è –≤–µ—Ä—Å–∏–∏ –±–µ–∑ —ç–º–æ–¥–∑–∏
        new_keyboard = f"""main = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

# –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–æ–≤–æ–º—É —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—é
main.row(
    KeyboardButton("{button1}"),
    KeyboardButton("{button2}")
)
main.add(KeyboardButton("{button3}"))
main.add(KeyboardButton("{button4}"))
main.row(
    KeyboardButton("{button5}"),
    KeyboardButton("{button6}")
)
"""
        
        # –ó–∞–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ –Ω–æ–≤–æ–µ
        content = re.sub(main_keyboard_pattern, new_keyboard, content)
        file.write(content)
        
        print(f"–û–±–Ω–æ–≤–ª–µ–Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤ —Ñ–∞–π–ª–µ {filename}")
        return True

if __name__ == "__main__":
    print("–ù–∞—á–∏–Ω–∞—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–Ω–æ–ø–æ–∫...")
    main_fixed = fix_main_py()
    buttons_fixed = fix_button_py()
    
    if main_fixed or buttons_fixed:
        print("–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–Ω–µ—Å–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è –∏–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –≤–Ω–µ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è.") 