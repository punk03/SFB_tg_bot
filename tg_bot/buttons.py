from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton


# –¶–≤–µ—Ç–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫ (—ç–º–æ–¥–∑–∏ –∫–∞–∫ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã)
class ButtonColors:
    PRIMARY = "üîµ"
    SUCCESS = "üü¢" 
    INFO = "üî∑"
    WARNING = "üü†"
    DANGER = "üî¥"
    NEUTRAL = "‚ö™"


# –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –¥–ª—è inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
back_button = InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")

# –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π –≥–ª–∞–≤–Ω–æ–π inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (–¥–ª—è —Å–ø—Ä–∞–≤–∫–∏)
inline_main = InlineKeyboardMarkup(row_width=1)

# –ì–ª–∞–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —Å —ç–º–æ–¥–∑–∏ –¥–ª—è –ª—É—á—à–µ–π –≤–∏–∑—É–∞–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
masters_sfb = InlineKeyboardButton(
    "üë∑‚Äç‚ôÇÔ∏è –ë–∞–∑–∞ –º–∞—Å—Ç–µ—Ä–æ–≤ –∏ —Å–ø–µ—Ü—Ç–µ—Ö–Ω–∏–∫–∏", callback_data="masters_sfb"
)
partners_stores = InlineKeyboardButton(
    "üè™ –ú–∞–≥–∞–∑–∏–Ω—ã-–ø–∞—Ä—Ç–Ω–µ—Ä—ã", callback_data="partners_stores"
)
vk_partner = InlineKeyboardButton(
    "ü§ù –°—Ç–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω–æ–º-–ø–∞—Ä—Ç–Ω–µ—Ä–æ–º", url="https://vk.com/topic-95855103_49010445"
)
vk_master = InlineKeyboardButton(
    "üìã –•–æ—á—É –≤ –±–∞–∑—É –º–∞—Å—Ç–µ—Ä–æ–≤ –∏ —Å–ø–µ—Ü—Ç–µ—Ö–Ω–∏–∫–∏", url="https://vk.com/topic-95855103_49010449"
)
vk_post = InlineKeyboardButton(
    "üìù –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∑–∞–ø–∏—Å—å", callback_data="offer_post"
)
all_posts = InlineKeyboardButton(
    "üì∞ –°—Ç–µ–Ω–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞", url="https://t.me/sfb_31"
)

# –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
inline_main.add(masters_sfb)
inline_main.add(partners_stores)
inline_main.row(vk_partner, vk_master)
inline_main.add(vk_post)
inline_main.add(all_posts)

# –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (ReplyKeyboardMarkup)
main = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

# –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–æ–≤–æ–º—É —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—é
main.row(
    KeyboardButton("–ú–∞–≥–∞–∑–∏–Ω—ã-–ø–∞—Ä—Ç–Ω–µ—Ä—ã –°–§–ë"),
    KeyboardButton("–ë–∞–∑–∞ –º–∞—Å—Ç–µ—Ä–æ–≤ –°–§–ë")
)
main.add(KeyboardButton("–°—Ç–µ–Ω–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞"))
main.add(KeyboardButton("–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∑–∞–ø–∏—Å—å"))
main.row(
    KeyboardButton("–°—Ç–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω–æ–º-–ø–∞—Ä—Ç–Ω–µ—Ä–æ–º"),
    KeyboardButton("–ü–æ–ø–∞—Å—Ç—å –≤ –±–∞–∑—É –º–∞—Å—Ç–µ—Ä–æ–≤")
)


# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ–±—ã—á–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏
def sort_buttons(buttons_list):
    """
    –°–æ—Ä—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É, –∏–≥–Ω–æ—Ä–∏—Ä—É—è —ç–º–æ–¥–∑–∏ –≤ –Ω–∞—á–∞–ª–µ
    :param buttons_list: —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–Ω–æ–ø–æ–∫
    :return: –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫
    """
    # –≠–º–æ–¥–∑–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –≤ –Ω–∞—á–∞–ª–µ –∫–Ω–æ–ø–æ–∫
    emoji_list = ["üìã", "üìÇ", "üîß", "üè¢", "üìù", "üõí", "üî®", "üè™", "üèó", "üöø", "üîå", "üè°", "üß±", "üöú", "ü™ë", "üå±", "üë∑‚Äç‚ôÇÔ∏è"]
    
    def get_sort_key(button):
        # –ï—Å–ª–∏ —ç—Ç–æ –∫–æ—Ä—Ç–µ–∂ (–Ω–∞–∑–≤–∞–Ω–∏–µ, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ), –±–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏–µ
        if isinstance(button, tuple):
            button = button[0]
            
        # –£–¥–∞–ª—è–µ–º —ç–º–æ–¥–∑–∏ –≤ –Ω–∞—á–∞–ª–µ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
        button_text = button
        for emoji in emoji_list:
            if button.startswith(emoji):
                button_text = button.replace(emoji, "", 1).strip()
                break
                
        # –£–¥–∞–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ [N] –≤ –∫–æ–Ω—Ü–µ, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        if ' [' in button_text and button_text.endswith(']'):
            button_text = button_text.split(' [')[0]
            
        return button_text.lower()
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
    return sorted(buttons_list, key=get_sort_key)

def generator(buttons_list, row_width=2, force_single_column=False, preserve_emoji=False, sort_alphabetically=True, hide_counts=False):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫—Ä–∞—Å–∏–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏ –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥" –≤–≤–µ—Ä—Ö—É –∏ –≤–Ω–∏–∑—É
    :param buttons_list: —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–Ω–æ–ø–æ–∫ –∏–ª–∏ –∫–æ—Ä—Ç–µ–∂–µ–π (–Ω–∞–∑–≤–∞–Ω–∏–µ, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ)
    :param row_width: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥—É (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 2)
    :param force_single_column: –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–∑–º–µ—â–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–Ω—É –∫–æ–ª–æ–Ω–∫—É
    :param preserve_emoji: –Ω–µ –¥–æ–±–∞–≤–ª—è—Ç—å —ç–º–æ–¥–∑–∏ –∫ –∫–Ω–æ–ø–∫–∞–º, –µ—Å–ª–∏ –æ–Ω–∏ —É–∂–µ –µ—Å—Ç—å –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏
    :param sort_alphabetically: —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ª–∏ –∫–Ω–æ–ø–∫–∏ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
    :param hide_counts: —Å–∫—Ä—ã–≤–∞—Ç—å –ª–∏ —Å—á–µ—Ç—á–∏–∫–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –º–∞—Å—Ç–µ—Ä–æ–≤ [N]
    :return: ReplyKeyboardMarkup
    """
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=row_width)
    kb.row(KeyboardButton('‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω—ã –≤ –æ–¥–Ω—É –∫–æ–ª–æ–Ω–∫—É
    is_shops_list = False
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —ç–ª–µ–º–µ–Ω—Ç–æ–≤: –µ—Å–ª–∏ –∫–æ—Ä—Ç–µ–∂–∏, –∑–Ω–∞—á–∏—Ç —ç—Ç–æ –º–æ–≥—É—Ç –±—ã—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤ –∏–ª–∏ –º–∞—Å—Ç–µ—Ä–æ–≤
    if buttons_list and isinstance(buttons_list[0], tuple):
        is_shops_list = any('üè™' in button[0] for button in buttons_list) or force_single_column
    else:
        is_shops_list = any('üè™' in button for button in buttons_list) or force_single_column
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –º–∞—Å—Ç–µ—Ä–æ–≤
    is_masters_list = False
    if buttons_list and isinstance(buttons_list[0], tuple):
        is_masters_list = any('üë∑‚Äç‚ôÇÔ∏è' in button[0] or 'üî®' in button[0] or 'üöú' in button[0] or 'üèó' in button[0] or 'üîß' in button[0] for button in buttons_list)
    else:
        is_masters_list = any('üë∑‚Äç‚ôÇÔ∏è' in button or 'üî®' in button or 'üöú' in button or 'üèó' in button or 'üîß' in button for button in buttons_list)
    
    # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É (–ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
    if sort_alphabetically:
        if buttons_list and isinstance(buttons_list[0], tuple):
            buttons_list = sorted(buttons_list, key=lambda x: x[0].lower())
        else:
            buttons_list = sort_buttons(buttons_list)
    
    emoji_list = ["üìã", "üìÇ", "üîß", "üè¢", "üìù", "üõí", "üî®", "üè™", "üèó", "üöø", "üîå", "üè°", "üß±", "üöú", "ü™ë", "üå±"]
    
    if buttons_list and isinstance(buttons_list[0], tuple):
        # –î–ª—è —Å–ø–∏—Å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º
        for button, count in buttons_list:
            # –£–¥–∞–ª—è–µ–º —ç–º–æ–¥–∑–∏ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            button_name = button
            for emoji in emoji_list:
                if button_name.startswith(emoji):
                    button_name = button_name.replace(emoji, "", 1).strip()
            
            # –î–ª—è –º–∞—Å—Ç–µ—Ä–æ–≤ –¥–æ–±–∞–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫, –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–æ–≤ - –Ω–µ—Ç
            if (is_masters_list or not is_shops_list) and not hide_counts:
                button_text = f"{button_name} [{count}]"
            else:
                # –î–ª—è –º–∞–≥–∞–∑–∏–Ω–æ–≤ –∏–ª–∏ –µ—Å–ª–∏ —Å–∫—Ä—ã—Ç—ã —Å—á–µ—Ç—á–∏–∫–∏ –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫
                button_text = f"{button_name}"
                
            kb.add(KeyboardButton(button_text))
    elif is_shops_list:
        # –î–ª—è –æ–±—ã—á–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –º–∞–≥–∞–∑–∏–Ω–æ–≤ (–±–µ–∑ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞)
        for button in buttons_list:
            # –£–¥–∞–ª—è–µ–º —ç–º–æ–¥–∑–∏ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            button_name = button
            for emoji in emoji_list:
                if button_name.startswith(emoji):
                    button_name = button_name.replace(emoji, "", 1).strip()
            
            kb.add(KeyboardButton(button_name))
    else:
        # –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤ - –ø–æ row_width –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥
        buttons = []
        for button in buttons_list:
            # –£–¥–∞–ª—è–µ–º —ç–º–æ–¥–∑–∏ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            button_name = button
            for emoji in emoji_list:
                if button_name.startswith(emoji):
                    button_name = button_name.replace(emoji, "", 1).strip()
            
            buttons.append(KeyboardButton(button_name))
        rows = [buttons[i:i+row_width] for i in range(0, len(buttons), row_width)]
        for row in rows:
            kb.row(*row)
    kb.row(KeyboardButton('‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
    return kb


# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–æ–π "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –º–∞–≥–∞–∑–∏–Ω–æ–≤" —Å–≤–µ—Ä—Ö—É –∏ —Å–Ω–∏–∑—É
def generator_with_categories_button(buttons_list, row_width=1, force_single_column=True, preserve_emoji=True, sort_alphabetically=True):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤ –∏ –∫–Ω–æ–ø–∫–æ–π "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –º–∞–≥–∞–∑–∏–Ω–æ–≤" –≤–≤–µ—Ä—Ö—É –∏ –≤–Ω–∏–∑—É
    :param buttons_list: —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–Ω–æ–ø–æ–∫
    :param row_width: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥—É (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1)
    :param force_single_column: –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–∑–º–µ—â–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–Ω—É –∫–æ–ª–æ–Ω–∫—É (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é True)
    :param preserve_emoji: –Ω–µ –¥–æ–±–∞–≤–ª—è—Ç—å —ç–º–æ–¥–∑–∏ –∫ –∫–Ω–æ–ø–∫–∞–º, –µ—Å–ª–∏ –æ–Ω–∏ —É–∂–µ –µ—Å—Ç—å –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é True)
    :param sort_alphabetically: —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ª–∏ –∫–Ω–æ–ø–∫–∏ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
    :return: ReplyKeyboardMarkup
    """
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=row_width)
    
    # –ö–Ω–æ–ø–∫–∞ "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –º–∞–≥–∞–∑–∏–Ω–æ–≤" –≤–≤–µ—Ä—Ö—É
    kb.row(KeyboardButton('‚óÄÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –º–∞–≥–∞–∑–∏–Ω–æ–≤'))
    
    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" –≤–≤–µ—Ä—Ö—É
    kb.row(KeyboardButton('‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
    
    # –í—Å–µ–≥–¥–∞ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
    buttons_list = sort_buttons(buttons_list)
    
    # –°–ø–∏—Å–æ–∫ —ç–º–æ–¥–∑–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å —É–∂–µ –≤ –∫–Ω–æ–ø–∫–∞—Ö
    emoji_list = ["üìã", "üìÇ", "üîß", "üè¢", "üìù", "üõí", "üî®", "üè™", "üèó", "üöø", "üîå", "üè°", "üß±", "üöú", "ü™ë", "üå±"]
    
    # –î–ª—è —Å–ø–∏—Å–∫–∞ –º–∞–≥–∞–∑–∏–Ω–æ–≤ - –ø–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥
    for button in buttons_list:
        # –£–¥–∞–ª—è–µ–º —ç–º–æ–¥–∑–∏ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        button_name = button
        for emoji in emoji_list:
            if button_name.startswith(emoji):
                button_name = button_name.replace(emoji, "", 1).strip()
        
        kb.add(KeyboardButton(button_name))
    
    # –ö–Ω–æ–ø–∫–∞ "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –º–∞–≥–∞–∑–∏–Ω–æ–≤" –≤–Ω–∏–∑—É
    kb.row(KeyboardButton('‚óÄÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –º–∞–≥–∞–∑–∏–Ω–æ–≤'))
    
    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" –≤–Ω–∏–∑—É
    kb.row(KeyboardButton('‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
        
    return kb


# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
def inline_generator(buttons_list, row_width=1, with_back_button=True):
    """
    –°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏, –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥" –≤–Ω–∏–∑—É
    :param buttons_list: —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ (–æ–±—ä–µ–∫—Ç—ã InlineKeyboardButton)
    :param row_width: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥—É
    :param with_back_button: –¥–æ–±–∞–≤–ª—è—Ç—å –ª–∏ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    :return: InlineKeyboardMarkup
    """
    kb = InlineKeyboardMarkup(row_width=row_width)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    for button in buttons_list:
        kb.add(button)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if with_back_button:
        kb.add(back_button)
    
    return kb


# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def go_back():
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(KeyboardButton('‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
    return kb

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
def navigation_keyboard(include_shop_categories=False, include_masters_categories=False, include_shop_list=False):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π
    :param include_shop_categories: –¥–æ–±–∞–≤–ª—è—Ç—å –ª–∏ –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –º–∞–≥–∞–∑–∏–Ω–æ–≤
    :param include_masters_categories: –¥–æ–±–∞–≤–ª—è—Ç—å –ª–∏ –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –º–∞—Å—Ç–µ—Ä–æ–≤
    :param include_shop_list: –¥–æ–±–∞–≤–ª—è—Ç—å –ª–∏ –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É –º–∞–≥–∞–∑–∏–Ω–æ–≤
    :return: ReplyKeyboardMarkup
    """
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ - –æ—Ç –±–ª–∏–∂–∞–π—à–µ–≥–æ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –¥–∞–ª—å–Ω–µ–º—É
    if include_shop_list:
        kb.add(KeyboardButton('‚óÄÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –º–∞–≥–∞–∑–∏–Ω–æ–≤'))
    
    if include_shop_categories:
        kb.add(KeyboardButton('‚óÄÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –º–∞–≥–∞–∑–∏–Ω–æ–≤'))
    
    if include_masters_categories:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Å–æ–±—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã —Ç–æ—á–Ω–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –µ–µ
        kb.add(KeyboardButton('‚óÄÔ∏è –ù–ê–ó–ê–î –ö –ö–ê–¢–ï–ì–û–†–ò–Ø–ú –ú–ê–°–¢–ï–†–û–í ‚óÄÔ∏è'))
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤—Å–µ–≥–¥–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    kb.add(KeyboardButton('‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
    
    return kb

"""from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup, Keyboard
from loader import topics



def main():
    kb = InlineKeyboardMarkup(resize_keyboard=True)
    buttons = [
        InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='None'),
        InlineKeyboardButton('–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ—Å—Ç', callback_data='None'),
        InlineKeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–º—ã', callback_data='None'),
        InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É', callback_data='None'),
    ]
    kb.add(*buttons)
    return kb

#–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –º–µ–Ω—é —Ç–æ–ø–∏–∫–æ–≤
def topics_menu():
    kb = InlineKeyboardMarkup()

    for key, value in topics.items():
        kb.add(InlineKeyboardButton(text=key, callback_data=value))
    
    return kb

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton



def navigation(post_id, topic_length):
    kb = InlineKeyboardMarkup()

    if post_id > 1:
        kb.add(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=f"post_id_{post_id-1}"))

    if post_id < topic_length:
        kb.add(InlineKeyboardButton(text="–í–ø–µ—Ä—ë–¥", callback_data=f"post_id_{post_id+1}"))
    kb.add(InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data=f"'start'"))

    return kb

"""