import vk_api
import logging
import asyncio
from concurrent.futures import ThreadPoolExecutor

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logger = logging.getLogger(__name__)

# –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
executor = ThreadPoolExecutor(max_workers=4)

async def run_in_executor(func, *args, **kwargs):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ –¥–ª—è –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–µ–≥–æ IO"""
    loop = asyncio.get_event_loop()
    return await loop.run_in_executor(executor, lambda: func(*args, **kwargs))

def get_vk_session(token):
    """–°–æ–∑–¥–∞–µ—Ç —Å–µ—Å—Å–∏—é –í–ö–æ–Ω—Ç–∞–∫—Ç–µ"""
    try:
        vk_session = vk_api.VkApi(token=token)
        return vk_session
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ VK —Å–µ—Å—Å–∏–∏: {e}")
        return None

def get_group_description(token, group_id):
    """–ü–æ–ª—É—á–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –í–ö–æ–Ω—Ç–∞–∫—Ç–µ"""
    try:
        vk_session = get_vk_session(token)
        if not vk_session:
            return None
            
        vk = vk_session.get_api()

        # –ó–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–µ
        group_info = vk.groups.getById(
            group_id=group_id,
            fields=["description"]
        )
        
        if not group_info or not isinstance(group_info, list) or len(group_info) == 0:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ {group_id}")
            return None
            
        # –ü–æ–ª—É—á–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã
        description = group_info[0].get("description", "")
        
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ –æ–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã {group_id}, –¥–ª–∏–Ω–∞: {len(description)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –±–æ–ª–µ–µ –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        formatted_description = ""
        if description:
            # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –∞–±–∑–∞—Ü—ã –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π
            paragraphs = description.split("\n\n")
            
            for i, paragraph in enumerate(paragraphs):
                # –î–ª—è –ø–µ—Ä–≤–æ–≥–æ –∞–±–∑–∞—Ü–∞ –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∂–∏—Ä–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º
                if i == 0:
                    formatted_description += f"<b>üèó {paragraph}</b>\n\n"
                else:
                    # –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –∫ –∫–∞–∂–¥–æ–º—É –∞–±–∑–∞—Ü—É
                    formatted_description += f"üîπ {paragraph}\n\n"
            
            # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –≤ –∫–æ–Ω—Ü–µ
            formatted_description = formatted_description.rstrip()
            
        return formatted_description or "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞."
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã {group_id}: {e}")
        return None

def get_album_names(token, group_id):
    """–ü–æ–ª—É—á–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –∞–ª—å–±–æ–º–æ–≤ –≥—Ä—É–ø–ø—ã –í–ö–æ–Ω—Ç–∞–∫—Ç–µ"""
    try:
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ —Ç–æ–∫–µ–Ω
        vk_session = get_vk_session(token)
        if not vk_session:
            return {}
            
    vk = vk_session.get_api()

    # –ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ –∞–ª—å–±–æ–º–æ–≤ –≥—Ä—É–ø–ø—ã
    response = vk.photos.getAlbums(
            owner_id=-group_id  # –ó–Ω–∞–∫ '-' –ø–µ—Ä–µ–¥ group_id —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —ç—Ç–æ –≥—Ä—É–ø–ø–∞
        )

        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π –∞–ª—å–±–æ–º–æ–≤
        data = {}
        for i in response.get("items", []):
            album_title = i.get("title", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–ª—å–±–æ–º")
            album_id = i.get("id")
            
            # –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –∫ –Ω–∞–∑–≤–∞–Ω–∏—è–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è UX
            if "–º–∞—Å—Ç" in album_title.lower():
                album_title = f"üî® {album_title}"
            elif "—Å–ø–µ—Ü—Ç–µ—Ö" in album_title.lower():
                album_title = f"üöú {album_title}"
            elif "—Å—Ç—Ä–æ–∏—Ç" in album_title.lower():
                album_title = f"üèó {album_title}"
            elif "—Ä–µ–º–æ–Ω—Ç" in album_title.lower():
                album_title = f"üîß {album_title}"
            else:
                album_title = f"üìÅ {album_title}"
                
            data[album_title] = album_id
            
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ {len(data)} –∞–ª—å–±–æ–º–æ–≤ –∏–∑ –≥—Ä—É–ø–ø—ã {group_id}")
    return data

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–ª—å–±–æ–º–æ–≤: {e}")
        return {}


def get_album_photos(token, owner_id, album_id):
    """–ü–æ–ª—É—á–∞–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–∑ –∞–ª—å–±–æ–º–∞ –≥—Ä—É–ø–ø—ã –í–ö–æ–Ω—Ç–∞–∫—Ç–µ"""
    try:
        vk_session = get_vk_session(token)
        if not vk_session:
            return []
            
        vk = vk_session.get_api()

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–∑ –∞–ª—å–±–æ–º–∞
        photos = vk.photos.get(owner_id=-owner_id, album_id=album_id, extended=1)
        result = []

        for photo in photos.get("items", []):
            # –ù–∞—Ö–æ–¥–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–æ—Ç–æ
            max_size = max(photo.get("sizes", []), key=lambda size: size.get("width", 0) * size.get("height", 0))
            photo_url = max_size.get("url")
            
            # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ñ–æ—Ç–æ
            photo_info = {
                "url": photo_url,
                "description": photo.get("text", ""),
                "likes": photo.get("likes", {}).get("count", 0),
                "date": photo.get("date")
            }
            
            result.append(photo_info)

        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ {len(result)} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏–∑ –∞–ª—å–±–æ–º–∞ {album_id}")
        return result

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏–∑ –∞–ª—å–±–æ–º–∞ {album_id}: {e}")
        return []


def get_market_items(token, owner_id):
    """–ü–æ–ª—É—á–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –º–∞—Ä–∫–µ—Ç–∞ –≥—Ä—É–ø–ø—ã –í–ö–æ–Ω—Ç–∞–∫—Ç–µ"""
    try:
        vk_session = get_vk_session(token)
        if not vk_session:
            return {}
            
        vk = vk_session.get_api()

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤
        albums = vk.market.getAlbums(owner_id=-owner_id, count=100)
        result = {}

        for item in albums.get("items", []):
            album_title = item.get("title", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è")
            album_id = item.get("id")
            
            # –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –∫ –Ω–∞–∑–≤–∞–Ω–∏—è–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è UX
            if "—Å—Ç—Ä–æ–π" in album_title.lower() or "–º–∞—Ç–µ—Ä–∏–∞–ª" in album_title.lower():
                album_title = f"üß± {album_title}"
            elif "–∏–Ω—Å—Ç—Ä" in album_title.lower():
                album_title = f"üî® {album_title}"
            elif "–º–µ–±–µ–ª" in album_title.lower():
                album_title = f"ü™ë {album_title}"
            elif "—Å–∞–¥" in album_title.lower() or "–æ–≥–æ—Ä–æ–¥" in album_title.lower():
                album_title = f"üå± {album_title}"
            else:
                album_title = f"üõí {album_title}"
                
            result[album_title] = album_id

        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ {len(result)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –≥—Ä—É–ø–ø—ã {owner_id}")
        return result

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤: {e}")
        return {}

def get_shop_list(token, owner_id):
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤-–ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –∏–∑ –≥—Ä—É–ø–ø—ã –í–ö–æ–Ω—Ç–∞–∫—Ç–µ"""
    try:
        vk_session = get_vk_session(token)
        if not vk_session:
            return {}
            
    vk = vk_session.get_api()

        # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤
        shop_categories = {}
        
        try:
            # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–∞—Ä–∫–µ—Ç–∞ (–∞–ª—å–±–æ–º—ã)
            market_albums = vk.market.getAlbums(owner_id=-owner_id, count=100)
            logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ {len(market_albums.get('items', []))} –∫–∞—Ç–µ–≥–æ—Ä–∏–π –º–∞—Ä–∫–µ—Ç–∞ –∏–∑ –≥—Ä—É–ø–ø—ã {owner_id}")
            
            # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤
            all_shops = {}
            
            # –î–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–∞—Ä–∫–µ—Ç–∞
            for album in market_albums.get("items", []):
                album_id = album.get("id")
                album_title = album.get("title", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è")
                
                # –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –∫ –Ω–∞–∑–≤–∞–Ω–∏—è–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è UX
                if "—Å—Ç—Ä–æ–π" in album_title.lower() or "–º–∞—Ç–µ—Ä–∏–∞–ª" in album_title.lower():
                    album_title = f"üß± {album_title}"
                elif "–∏–Ω—Å—Ç—Ä" in album_title.lower():
                    album_title = f"üî® {album_title}"
                elif "–º–µ–±–µ–ª" in album_title.lower():
                    album_title = f"ü™ë {album_title}"
                elif "—Å–∞–¥" in album_title.lower() or "–æ–≥–æ—Ä–æ–¥" in album_title.lower():
                    album_title = f"üå± {album_title}"
                elif "—Å–∞–Ω—Ç–µ—Ö" in album_title.lower() or "–≤–æ–¥–æ—Å–Ω" in album_title.lower():
                    album_title = f"üöø {album_title}"
                elif "—ç–ª–µ–∫—Ç—Ä" in album_title.lower() or "–æ—Å–≤–µ—â" in album_title.lower():
                    album_title = f"üîå {album_title}"
                elif "—Ö–æ–∑—Ç–æ–≤–∞—Ä" in album_title.lower() or "–¥–ª—è –¥–æ–º–∞" in album_title.lower():
                    album_title = f"üè° {album_title}"
                else:
                    album_title = f"üè™ {album_title}"
                
                # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –µ—Å–ª–∏ –µ—ë –µ—â—ë –Ω–µ—Ç
                if album_title not in shop_categories:
                    shop_categories[album_title] = {}
                
                # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã (–º–∞–≥–∞–∑–∏–Ω—ã) –∏–∑ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ - —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ 200
                items = vk.market.get(owner_id=-owner_id, album_id=album_id, count=200, extended=1)
                
                logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ {len(items.get('items', []))} —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{album_title}'")
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —Ç–æ–≤–∞—Ä –∫–∞–∫ –º–∞–≥–∞–∑–∏–Ω
                for item in items.get("items", []):
                    # –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞–≥–∞–∑–∏–Ω–µ –∏–∑ —Ç–æ–≤–∞—Ä–∞
                    item_id = item.get("id")
                    title = item.get("title", "–ú–∞–≥–∞–∑–∏–Ω –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
                    description = item.get("description", "")
                    
                    # –ü–æ–ª—É—á–∞–µ–º –ª—É—á—à–µ–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞
                    photo_url = None
                    if "photos" in item and item["photos"]:
                        try:
                            best_photo = max(
                                item["photos"][0].get("sizes", []), 
                                key=lambda size: size.get("width", 0) * size.get("height", 0)
                            )
                            photo_url = best_photo.get("url")
                        except (IndexError, KeyError):
                            photo_url = item.get("thumb_photo")
                    else:
                        photo_url = item.get("thumb_photo")
                    
                    # –ü–∞—Ä—Å–∏–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è
                    address = "–ê–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω"
                    phone = "–¢–µ–ª–µ—Ñ–æ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω"
                    website = "#"
                    work_hours = "–ù–µ —É–∫–∞–∑–∞–Ω—ã"
                    
                    # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è
                    for line in description.split("\n"):
                        line = line.strip()
                        if line.startswith("–ê–¥—Ä–µ—Å:") or line.startswith("üìç"):
                            address = line.split(":", 1)[1].strip() if ":" in line else line[1:].strip()
                        elif line.startswith("–¢–µ–ª–µ—Ñ–æ–Ω:") or line.startswith("üìû"):
                            phone = line.split(":", 1)[1].strip() if ":" in line else line[1:].strip()
                        elif line.startswith("–°–∞–π—Ç:") or line.startswith("üåê"):
                            website = line.split(":", 1)[1].strip() if ":" in line else line[1:].strip()
                        elif line.startswith("–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:") or line.startswith("–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã:") or line.startswith("üïí"):
                            work_hours = line.split(":", 1)[1].strip() if ":" in line else line[1:].strip()
                    
                    # –§–æ—Ä–º–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞
                    shop_key = f"üè™ {title}"
                    
                    # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –º–∞–≥–∞–∑–∏–Ω–∞
                    shop_data = {
                        "id": item_id,
                        "title": title,
                        "description": description,
                        "address": address,
                        "phone": phone,
                        "website": website,
                        "work_hours": work_hours,
                        "photo": photo_url,
                        "vk_url": f"https://vk.com/market-{owner_id}?w=product-{owner_id}_{item_id}",
                        "category": album_title.replace("üè™ ", "").replace("üß± ", "").replace("üî® ", "").replace("ü™ë ", "").replace("üå± ", "").replace("üöø ", "").replace("üîå ", "").replace("üè° ", "")
                    }
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º –º–∞–≥–∞–∑–∏–Ω –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                    shop_categories[album_title][shop_key] = shop_data
                    # –î–æ–±–∞–≤–ª—è–µ–º –º–∞–≥–∞–∑–∏–Ω –≤ –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫
                    all_shops[shop_key] = shop_data
            
            # –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–µ—Ç –∏–ª–∏ –æ–Ω–∏ –ø—É—Å—Ç—ã–µ, –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –≤–Ω–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            if not shop_categories or all(len(shops) == 0 for category, shops in shop_categories.items()):
                logger.info("–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—É—Å—Ç—ã, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤–Ω–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
                
                # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                items = vk.market.get(owner_id=-owner_id, count=200, extended=1)
                
                if items and items.get("items"):
                    # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–í—Å–µ –º–∞–≥–∞–∑–∏–Ω—ã"
                    all_category = "üè™ –í—Å–µ –º–∞–≥–∞–∑–∏–Ω—ã"
                    shop_categories[all_category] = {}
                    
                    for item in items.get("items", []):
                        # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∫–∞–∫ –≤—ã—à–µ
                        item_id = item.get("id")
                        title = item.get("title", "–ú–∞–≥–∞–∑–∏–Ω –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
                        description = item.get("description", "")
                        
                        photo_url = item.get("thumb_photo")
                        
                        # –ü–∞—Ä—Å–∏–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è
                        address = "–ê–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω"
                        phone = "–¢–µ–ª–µ—Ñ–æ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω"
                        website = "#"
                        work_hours = "–ù–µ —É–∫–∞–∑–∞–Ω—ã"
                        
                        for line in description.split("\n"):
                            line = line.strip()
                            if line.startswith("–ê–¥—Ä–µ—Å:") or line.startswith("üìç"):
                                address = line.split(":", 1)[1].strip() if ":" in line else line[1:].strip()
                            elif line.startswith("–¢–µ–ª–µ—Ñ–æ–Ω:") or line.startswith("üìû"):
                                phone = line.split(":", 1)[1].strip() if ":" in line else line[1:].strip()
                            elif line.startswith("–°–∞–π—Ç:") or line.startswith("üåê"):
                                website = line.split(":", 1)[1].strip() if ":" in line else line[1:].strip()
                            elif line.startswith("–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:") or line.startswith("–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã:") or line.startswith("üïí"):
                                work_hours = line.split(":", 1)[1].strip() if ":" in line else line[1:].strip()
                        
                        shop_key = f"üè™ {title}"
                        
                        shop_data = {
                            "id": item_id,
                            "title": title,
                            "description": description,
                            "address": address,
                            "phone": phone,
                            "website": website,
                            "work_hours": work_hours,
                            "photo": photo_url,
                            "vk_url": f"https://vk.com/market-{owner_id}?w=product-{owner_id}_{item_id}",
                            "category": "–í—Å–µ –º–∞–≥–∞–∑–∏–Ω—ã"
                        }
                        
                        shop_categories[all_category][shop_key] = shop_data
                        all_shops[shop_key] = shop_data
            
            # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤—Å–µ –µ—â—ë –ø—É—Å—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å
            if not shop_categories or all(len(shops) == 0 for category, shops in shop_categories.items()):
                logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω—ã –∏–∑ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ")
                return {"all_shops": {}}
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–ª–æ—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ –∫–æ –≤—Å–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
            shop_categories["all_shops"] = all_shops
            
            # –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤
            category_count = len(shop_categories) - 1  # –ë–µ–∑ all_shops
            shop_count = len(all_shops)
            logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ {shop_count} –º–∞–≥–∞–∑–∏–Ω–æ–≤-–ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –≤ {category_count} –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö")
            
            # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤—ã–≤–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            logger.info(f"–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤: {[k for k in shop_categories.keys() if k != 'all_shops']}")
            
            return shop_categories
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            return {"all_shops": {}}

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –º–∞–≥–∞–∑–∏–Ω–æ–≤: {e}")
        return {"all_shops": {}}

def get_market_item_info(token, owner_id, album_id):
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–∞—Ö –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–∞—Ä–∫–µ—Ç–∞ –≥—Ä—É–ø–ø—ã –í–ö–æ–Ω—Ç–∞–∫—Ç–µ"""
    try:
        vk_session = get_vk_session(token)
        if not vk_session:
            return []
            
        vk = vk_session.get_api()

        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        items = vk.market.get(
            owner_id=-owner_id, album_id=album_id, count=200, extended=1
        )
        result = []

        for item in items.get("items", []):
            # –ü–æ–ª—É—á–∞–µ–º –ª—É—á—à–µ–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞
            photo_url = None
            if "photos" in item and item["photos"]:
                try:
                    best_photo = max(
                        item["photos"][0].get("sizes", []), 
                        key=lambda size: size.get("width", 0) * size.get("height", 0)
                    )
                    photo_url = best_photo.get("url")
                except (IndexError, KeyError):
                    photo_url = item.get("thumb_photo")
            else:
                photo_url = item.get("thumb_photo")

            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ü–µ–Ω—É –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
            price_text = ""
            if "price" in item:
                price = item["price"].get("text", "")
                if price:
                    price_text = f"\nüí∞ –¶–µ–Ω–∞: {price}"

            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ
            result.append(
                {
                    "title": item.get("title", "–¢–æ–≤–∞—Ä –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"),
                    "description": item.get("description", "") + price_text,
                    "photo": photo_url,
                    "url": f"https://vk.com/market-{owner_id}?w=product-{owner_id}_{item.get('id')}",
                    "price": item.get("price", {}).get("text", "")
                }
            )

        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ {len(result)} —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {album_id}")
        return result

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {album_id}: {e}")
        return []


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    token = "vk1.a.hyubBHqaBx7Pws9eH-kK0uZtw617T5GPhsRa8k0WvIEpz321CjWx3MpN-jqCTBuB6RXl1mb2dxd38WhBooney-79ZO1fjHXmwBQ4QNOhmJPvdPZiXE8KHPy05zYjUz72V7KXnrn-Bh7_DaKzkk-W5MdliJtsbR-RNo1HFUtByof4pLkaMz-wg27ezaLpet8U06nQ1skIk03sToud8eO7fA"
    group_id = 95855103
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π
    albums = get_album_names(token, group_id)
    print(f"–ê–ª—å–±–æ–º—ã: {len(albums)}")
    
    if albums:
        sample_album_id = list(albums.values())[0]
        photos = get_album_photos(token, group_id, sample_album_id)
        print(f"–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: {len(photos)}")
    
    market_categories = get_market_items(token, group_id)
    print(f"–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤: {len(market_categories)}")
    
    if market_categories:
        sample_category_id = list(market_categories.values())[0]
        items = get_market_item_info(token, group_id, sample_category_id)
        print(f"–¢–æ–≤–∞—Ä—ã: {len(items)}")
        
    shops = get_shop_list(token, group_id)
    print(f"–ú–∞–≥–∞–∑–∏–Ω—ã: {len(shops)}")
