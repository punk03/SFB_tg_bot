"""
–°—Ç—Ä–æ–π –§–æ—Ä—É–º –ë–µ–ª–≥–æ—Ä–æ–¥ - Telegram Bot
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –º–∞—Å—Ç–µ—Ä–æ–≤, –æ—Ç–æ–±—Ä–∞–∂–∞—é—â–∞—è –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –¥–∞–∂–µ –ø—É—Å—Ç—ã–µ
"""

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏ –º–æ–¥—É–ª–∏ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
from main import *

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –º–∞—Å—Ç–µ—Ä–æ–≤ (—Å –Ω–æ–≤—ã–º –∏–º–µ–Ω–µ–º –∫–Ω–æ–ø–∫–∏)
@dp.message_handler(lambda m: m.text == "‚óÄÔ∏è –ù–ê–ó–ê–î –ö –ö–ê–¢–ï–ì–û–†–ò–Ø–ú –ú–ê–°–¢–ï–†–û–í ‚óÄÔ∏è", state="*")
async def back_to_master_categories(message: types.Message, state: FSMContext):
    # –ü–∏—à–µ–º –≤ –ª–æ–≥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    logger.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –º–∞—Å—Ç–µ—Ä–æ–≤ —Å –Ω–æ–≤–æ–π –∫–Ω–æ–ø–∫–æ–π: '{message.text}'")
    
    try:
        # –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.finish()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
        loading_message = await message.answer("üîÑ <b>–ó–∞–≥—Ä—É–∂–∞—é –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–∞—Å—Ç–µ—Ä–æ–≤...</b>\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.", parse_mode=ParseMode.HTML)
        
        global non_empty_masters_cache, non_empty_masters_cache_time
        current_time = time.time()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—ç—à –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        if non_empty_masters_cache and current_time - non_empty_masters_cache_time < config.CACHE_TIME:
            logger.info("–ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à –∫–∞—Ç–µ–≥–æ—Ä–∏–π –º–∞—Å—Ç–µ—Ä–æ–≤ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ")
            category_buttons = non_empty_masters_cache.get("buttons", [])
            all_categories = non_empty_masters_cache.get("all_categories", {})
        else:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫—ç—à —É—Å—Ç–∞—Ä–µ–ª
            logger.info("–û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à –∫–∞—Ç–µ–≥–æ—Ä–∏–π –º–∞—Å—Ç–µ—Ä–æ–≤ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ")
            data = await get_album_names_async(config.VK_TOKEN, config.VK_GROUP_ID)
            
            if not data:
                await loading_message.delete()
                await message.answer("‚ö†Ô∏è –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–∞—Å—Ç–µ—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã",
                                    reply_markup=buttons.go_back())
                return
                
            # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏ –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
            tasks = []
            for cat, album_id in data.items():
                # –ü—Ä–∏–º–µ–Ω—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
                await vk_api_rate_limit()
                tasks.append((cat, album_id, get_album_photos_async(config.VK_TOKEN, config.VK_GROUP_ID, album_id)))
            
            # –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å –ø–∞—É–∑–∞–º–∏ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            category_buttons = []
            non_empty = {}
            all_categories = {}
            
            for cat, album_id, task in tasks:
                photos = await task
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –Ω–∞–ª–∏—á–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
                all_categories[cat] = album_id
                # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –¥–∞–∂–µ –ø—É—Å—Ç—ã—Ö
                photo_count = len(photos) if photos else 0
                category_buttons.append((cat, photo_count))
                
                # –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∞–∫–∂–µ –Ω–µ–ø—É—Å—Ç—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                if photos and len(photos) > 0:
                    non_empty[cat] = album_id
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –∫—ç—à
            non_empty_masters_cache = {
                "buttons": category_buttons,
                "categories": non_empty,
                "all_categories": all_categories
            }
            non_empty_masters_cache_time = current_time
            
            logger.info(f"–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–∞—Å—Ç–µ—Ä–æ–≤ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ: {list(all_categories.keys())}")
            logger.info(f"–ù–µ–ø—É—Å—Ç—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–∞—Å—Ç–µ—Ä–æ–≤ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ: {list(non_empty.keys())}")
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
        await loading_message.delete()
        
        if not category_buttons:
            await message.answer("‚ö†Ô∏è –ù–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–∞—Å—Ç–µ—Ä–æ–≤.", reply_markup=buttons.go_back())
            return
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∑–∞–Ω–æ–≤–æ
        kb = buttons.generator(category_buttons)
        await message.answer('üë∑‚Äç‚ôÇÔ∏è <b>–û—Ç–∫—Ä—ã—Ç–∞—è –±–∞–∑–∞ –º–∞—Å—Ç–µ—Ä–æ–≤ –∏ —Å–ø–µ—Ü—Ç–µ—Ö–Ω–∏–∫–∏</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞:', 
                            parse_mode=ParseMode.HTML,
                            reply_markup=kb)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
        await User.get_master.set()
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ –Ω–µ–ø—É—Å—Ç—ã–µ
        await state.set_data(all_categories)
        
        logger.info("–£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω –≤–æ–∑–≤—Ä–∞—Ç –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –º–∞—Å—Ç–µ—Ä–æ–≤")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –º–∞—Å—Ç–µ—Ä–æ–≤: {e}")
        await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.", reply_markup=buttons.go_back())

print("–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –º–∞—Å—Ç–µ—Ä–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!") 